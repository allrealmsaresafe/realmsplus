const { SlashCommandBuilder, IntegrationExpireBehavior } = require('discord.js');
const mongoose = require('mongoose')
const { authenticate } = require('@xboxreplay/xboxlive-auth')
const axios = require('axios')
require('dotenv').config()
class XboxHandler {
            
    authenticate(email, password) {
        return new Promise((resolve, reject) => {
            authenticate(email, password).then((xsts) => {
                this.hash = xsts.user_hash
                this.token = xsts.xsts_token
                setTimeout(() => {
                    this.authenticate(email, password)
                }, 1000 * 60 * 60 * 12)
                resolve()
            }).catch((err) => {
                reject(err)
            })
        })
    }
    fetchGT(gamertag) {
        return new Promise((resolve, reject) => {
            if (!this.hash || !this.token) reject("Not authenticated. Run xbox.authenticate(email, password) first.")

            axios.get(`https://profile.xboxlive.com/users/gt(${gamertag})/profile/settings?settings=GameDisplayPicRaw`, {
                headers: {
                    'Authorization': `XBL3.0 x=${this.hash};${this.token}`,
                    'x-xbl-contract-version': '3'
                }
            }).then((res) => {
                resolve({
                    xuid: res.data.profileUsers[0].id,
                    image: res.data.profileUsers[0].settings[0].value,
                    gamertag: gamertag
                })
            }).catch((err) => {
                reject(err)
            })
        })
    }
}
module.exports = {
	data: new SlashCommandBuilder()
		.setName('xuid')
		.setDescription('Gets an XUID from a gamertag.')
        .addStringOption(option => option.setName('gamertag').setDescription('The gamertag you want XUID from.').setRequired(true)),
	async execute(interaction) {
		try {
			if (mongoose.connection.readyState != 1) return
            const gamertag = interaction.options.getString('gamertag')
            let xbox = new XboxHandler()
            xbox.authenticate(`${process.env.EMAIL}`, `${process.env.PASSWORD}`).then(async () => await xbox.fetchGT(`AllRealmsSafe`))
            return interaction.reply(`**${gamertag}'s XUID is **${xuid}**`)
	} catch (error) {
		const errorChannel = interaction.client.channels.cache.get('1060347445722230867')
		await errorChannel.send(`There has been an error! Here is the information sorrounding it.\n\nServer Found In: **${interaction.guild.name}**\nUser Who Found It: **${interaction.user.tag}**ãƒ»**${interaction.user.id}**\nFound Time: <t:${Math.trunc(Date.now() / 1000)}:R>\nThe Reason: **XUID Command has an error**\nError: **${error}**\n\`\`\` \`\`\``)
		console.log(error)
	}
	},
};